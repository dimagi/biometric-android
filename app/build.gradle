import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

ext {
    // Obtained from ~/.gradle/gradle.properties on build server (mobile agent), or your local
    // ~/.gradle/gradle.properties file, or loads default empty strings if neither is present
    RELEASE_STORE_FILE = project.properties['BIOMETRIC_RELEASE_STORE_FILE'] ?: "."
    RELEASE_STORE_PASSWORD = project.properties['BIOMETRIC_RELEASE_STORE_PASSWORD'] ?: ""
    RELEASE_KEY_ALIAS = project.properties['BIOMETRIC_RELEASE_KEY_ALIAS'] ?: ""
    RELEASE_KEY_PASSWORD = project.properties['BIOMETRIC_RELEASE_KEY_PASSWORD'] ?: ""
    GOOGLE_PLAY_MAPS_API_KEY = project.properties['GOOGLE_PLAY_MAPS_API_KEY'] ?: ""
    GOOGLE_SERVICES_API_KEY = project.properties['GOOGLE_SERVICES_API_KEY'] ?: ""
    FIREBASE_DATABASE_URL = project.properties['FIREBASE_DATABASE_URL'] ?: ''
    TECH5_SDK_DIR = project.properties['TECH5_SDK_DIR'] ?: ''
}

android {
    namespace 'com.dimagi.biometric'
    compileSdk 34

    signingConfigs {
        release {
            storeFile file(project.ext.RELEASE_STORE_FILE)
            storePassword project.ext.RELEASE_STORE_PASSWORD
            keyAlias project.ext.RELEASE_KEY_ALIAS
            keyPassword project.ext.RELEASE_KEY_PASSWORD
        }
    }

    defaultConfig {
        applicationId "com.dimagi.biometric"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libncnn.so'
        pickFirst 'lib/arm64-v8a/libncnn.so'

        pickFirst 'lib/armeabi-v7a/libopencv_java4.so'
        pickFirst 'lib/arm64-v8a/libopencv_java4.so'

        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    configurations {
        all {
            // Dependency conflict with support-library
            exclude group: "com.android.support", module: "support-core-ui"
            exclude group: "com.android.support", module: "support-compat"
        }
    }
}

dependencies {
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.7.7'
    implementation 'androidx.navigation:navigation-ui:2.7.7'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    implementation 'org.commcarehq.commcare:support-library:12.5'

    def camerax_version = '1.3.4'
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"


    implementation(files("$project.ext.TECH5_SDK_DIR/AirsnapFaceCore-release.aar"))
    implementation(files("$project.ext.TECH5_SDK_DIR/AirsnapFaceUI-release.aar"))
    implementation(files("$project.ext.TECH5_SDK_DIR/T5AirSnap-release.aar"))
    implementation(files("$project.ext.TECH5_SDK_DIR/AirsnapFingerUI-release.aar"))
    implementation(files("$project.ext.TECH5_SDK_DIR/android-wrapper-4.5.1.aar"))

    implementation(platform("com.google.firebase:firebase-bom:33.1.1"))
    implementation("com.google.firebase:firebase-crashlytics")
    implementation("com.google.firebase:firebase-analytics")
}

afterEvaluate {
    processDebugGoogleServices.dependsOn injectGoogleServicesAPIKey
    processReleaseGoogleServices.dependsOn injectGoogleServicesAPIKey
}

tasks.register('injectGoogleServicesAPIKey') {
    description = 'Injects the Google Services API key into the google-services.json file at runtime'
    copy {
        from file("templates/google-services.json")
        filter(ReplaceTokens, tokens: [apiKey             : project.ext.GOOGLE_SERVICES_API_KEY,
                                       firebaseDatabaseUrl: project.ext.FIREBASE_DATABASE_URL])
        into projectDir
    }
}

apply plugin: 'com.google.gms.google-services'
